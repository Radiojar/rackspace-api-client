package com.pynode.rackspace.client;

import com.rackspace.cloud.api.CloudServersAPIFault;
import java.io.InputStream;
import javax.xml.bind.JAXBElement;
import org.apache.cxf.jaxrs.client.ClientWebApplicationException;
import org.apache.cxf.jaxrs.client.ServerWebApplicationException;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 *
 * @author Christos Fragoulides
 */
public class RackspaceCloudClientException extends Exception {
    
    private static final Logger LOGGER = LoggerFactory.getLogger(RackspaceCloudClientException.class);
    
    private Throwable cause = null;
    private ErrorSource errorSource = null;
    private CloudServersAPIFault fault = null;

    public static enum ErrorSource {
        CLIENT,
        SERVER;
    }
    
    public RackspaceCloudClientException(Throwable cause) {
        super(cause);
        this.cause = cause;
    }

    public RackspaceCloudClientException(String message, Throwable cause) {
        super(message, cause);
        this.cause = cause;
    }

    public RackspaceCloudClientException(String message) {
        super(message);
    }

    public RackspaceCloudClientException() { }
    
    public ErrorSource getErrorSource() {
        if (errorSource == null) {
            // If we there is no cause, the error was created by the client itself.
            if (cause == null) errorSource = ErrorSource.CLIENT;
            // Client error coming from CXF.
            else if (cause instanceof ClientWebApplicationException) errorSource = ErrorSource.CLIENT;
            // Server errors.
            else if (cause instanceof ServerWebApplicationException) errorSource = ErrorSource.SERVER;
            // Default to CLIENT if the above did not had any result.
            else errorSource = ErrorSource.CLIENT;
        }
        
        return errorSource;
    }
        
    public CloudServersAPIFault getServerFault() {
        if (fault != null) return fault;
        if (ErrorSource.SERVER.equals(getErrorSource())) {
            ServerWebApplicationException sex = (ServerWebApplicationException) cause;
            try {
                JAXBElement<CloudServersAPIFault> el = 
                        (JAXBElement<CloudServersAPIFault>) 
                        RackspaceCloudClient.getJAXBContext()
                                            .createUnmarshaller()
                                            .unmarshal((InputStream) sex.getResponse().getEntity());
                fault = el.getValue();
            } catch (Exception e) {
                String msg = String.format("Failed to retrieve Rackspace Fault for status code [%1$s].",
                        sex.getStatus());
                LOGGER.warn(msg, e);
                fault = new CloudServersAPIFault();
                fault.setCode(sex.getStatus());
                fault.setMessage(msg);
                fault.setDetails("Generated by Rackspace Cloud Client.");
            }
        }
        return fault;
    }
    
}
